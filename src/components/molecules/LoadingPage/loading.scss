@import "scss/constants";

// @debt Ensure we can use this purple in the main constants.scss file then move it back there
$primary: #7c46fb;

$loading-icon-mask-image: url(../../../assets/masks/mask-sparkle-logo.png);
$loading-page-background-image: var(--loading-page-background-image, none);
$loading-text-size: 12vw;

$sparkleanim-duration: 4s;
$sparkleanim-scale-min: 0.5;
$sparkleanim-scale-max: 1;
$sparkleanim-bg-color: $white;
$sparkleanim-bg-opacity: 0.5;

$loadingburningman-duration: $sparkleanim-duration/2;
$loadingburningman-opacity-min: 0;
$loadingburningman-opacity-max: 1;
$loadingburningman-bg-color: $white;

.LoadingPage {
  // Setting position here makes our container the 'nearest positioned ancestor' when positioning child elements
  position: absolute;

  width: 100vw;
  height: 100vh;

  background-color: $primary;
  background-image: $loading-page-background-image;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;

  &__blur {
    width: inherit;
    height: inherit;

    // Gives us the blurred effect over the background image (when set)
    background-color: transparent;
    backdrop-filter: blur(15px);

    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
  }

  &__image {
    // CSS ignores invalid property values
    //   When this var is set to an image URL, the browser will ignore it
    //   When this var isn't set, then we will use the default fallback for the var, which is 'none'
    display: $loading-page-background-image;

    border-radius: 20px;

    // Background image size / aspect ratio hack (https://css-tricks.com/aspect-ratio-boxes/)
    // @debt We can probably replace this with aspect-ratio when it's supported across more browsers
    width: 30%;
    height: 0;
    padding-top: calc(800 / 600 * 30%);

    // Fallback to showing the main container's background in case we don't load an image
    background-color: transparent;

    background-image: $loading-page-background-image;
    background-position: center;
    background-repeat: no-repeat;
    background-size: contain;
  }

  &__loading-text {
    position: absolute;
    bottom: 0;

    font-family: $kotr-font-larger;
    font-size: $loading-text-size;

    color: $white;
    text-shadow: 5px 5px 20px rgba($black, 1);

    user-select: none;
  }
}

// @debt extract this loading icon into a standalone component
.loading-icon {
  position: absolute;
  bottom: 1vw;
  left: calc(50vw + 18vw);

  // @debt Make this resize responsively using vw/similar
  height: 152px;
  width: 76px;

  filter: drop-shadow(5px 5px 20px rgba($black, 1));

  &__mask {
    width: inherit;
    height: inherit;

    mask-image: $loading-icon-mask-image;
    mask-size: contain;

    background-color: rgba($sparkleanim-bg-color, $sparkleanim-bg-opacity);
    animation: sparkleanim $sparkleanim-duration cubic-bezier(0.77, 0, 0.175, 1)
      infinite;
  }

  &__fill {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;

    // Animate the 'fill' effect
    animation: loadingburningman $loadingburningman-duration
      cubic-bezier(0.77, 0, 0.175, 1) infinite;
    height: 0;
    background-color: rgba(
      $loadingburningman-bg-color,
      $loadingburningman-opacity-min
    );
  }
}

@keyframes sparkleanim {
  0% {
    transform: scale($sparkleanim-scale-min);
  }

  25% {
    transform: scale($sparkleanim-scale-max) rotate(180deg);
  }

  50% {
    transform: scale($sparkleanim-scale-min);
  }

  75% {
    transform: scale($sparkleanim-scale-max) rotate(-180deg);
  }

  100% {
    transform: scale($sparkleanim-scale-min);
  }
}

@keyframes loadingburningman {
  0% {
    background-color: rgba(
      $loadingburningman-bg-color,
      $loadingburningman-opacity-min
    );
    height: 0;
  }

  4% {
    background-color: rgba(
      $loadingburningman-bg-color,
      $loadingburningman-opacity-max
    );
  }

  20% {
    background-color: rgba(
      $loadingburningman-bg-color,
      $loadingburningman-opacity-max
    );
  }

  100% {
    background-color: rgba(
      $loadingburningman-bg-color,
      $loadingburningman-opacity-min
    );
    height: 100%;
  }
}
